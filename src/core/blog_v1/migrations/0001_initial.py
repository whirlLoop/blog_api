# Generated by Django 3.0.6 on 2020-06-01 04:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(error_messages={'unique': 'The username address you entered has already been registered.'}, max_length=40, unique=True, verbose_name='username')),
                ('firstname', models.CharField(blank=True, max_length=30, verbose_name='firstname')),
                ('lastname', models.CharField(blank=True, max_length=30, verbose_name='lastname')),
                ('surname', models.CharField(blank=True, max_length=30, verbose_name='surname')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_change_allowed', models.BooleanField(default=False, help_text='Designates whether this user has been authorized to change his own password, in the change_password view.', verbose_name='change_allowed')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('change_email', models.EmailField(blank=True, default=None, error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('former_email', models.EmailField(blank=True, default=None, max_length=255, null=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the blog', max_length=30)),
                ('slug', models.SlugField(max_length=300, unique_for_date='publish')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date of post publication')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Date updated')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', help_text="Designates whether the post has been             published or it's still a draft", max_length=10)),
                ('author', models.ForeignKey(help_text='Id of the author', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-publish_date',),
            },
        ),
    ]
